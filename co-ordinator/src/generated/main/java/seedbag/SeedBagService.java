// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: seed_bag.proto

package seedbag;

/**
 * Protobuf service {@code seedbag.SeedBagService}
 */
public  abstract class SeedBagService
    implements com.google.protobuf.Service {
  protected SeedBagService() {}

  public interface Interface {
    /**
     * <code>rpc Size(.seedbag.SizeRequest) returns (.seedbag.SizeResponse);</code>
     */
    public abstract void size(
        com.google.protobuf.RpcController controller,
        seedbag.SizeRequest request,
        com.google.protobuf.RpcCallback<seedbag.SizeResponse> done);

    /**
     * <code>rpc IsEmpty(.seedbag.IsEmptyRequest) returns (.seedbag.IsEmptyResponse);</code>
     */
    public abstract void isEmpty(
        com.google.protobuf.RpcController controller,
        seedbag.IsEmptyRequest request,
        com.google.protobuf.RpcCallback<seedbag.IsEmptyResponse> done);

    /**
     * <code>rpc Contains(.seedbag.ContainsRequest) returns (.seedbag.ContainsResponse);</code>
     */
    public abstract void contains(
        com.google.protobuf.RpcController controller,
        seedbag.ContainsRequest request,
        com.google.protobuf.RpcCallback<seedbag.ContainsResponse> done);

    /**
     * <code>rpc Iterator(.seedbag.IteratorRequest) returns (.seedbag.IteratorResponse);</code>
     */
    public abstract void iterator(
        com.google.protobuf.RpcController controller,
        seedbag.IteratorRequest request,
        com.google.protobuf.RpcCallback<seedbag.IteratorResponse> done);

    /**
     * <code>rpc ToArray(.seedbag.ToArrayRequest) returns (.seedbag.ToArrayResponse);</code>
     */
    public abstract void toArray(
        com.google.protobuf.RpcController controller,
        seedbag.ToArrayRequest request,
        com.google.protobuf.RpcCallback<seedbag.ToArrayResponse> done);

    /**
     * <code>rpc Add(.seedbag.AddRequest) returns (.seedbag.AddResponse);</code>
     */
    public abstract void add(
        com.google.protobuf.RpcController controller,
        seedbag.AddRequest request,
        com.google.protobuf.RpcCallback<seedbag.AddResponse> done);

    /**
     * <code>rpc Remove(.seedbag.RemoveRequest) returns (.seedbag.RemoveResponse);</code>
     */
    public abstract void remove(
        com.google.protobuf.RpcController controller,
        seedbag.RemoveRequest request,
        com.google.protobuf.RpcCallback<seedbag.RemoveResponse> done);

    /**
     * <code>rpc ContainsAll(.seedbag.ContainsAllRequest) returns (.seedbag.ContainsAllResponse);</code>
     */
    public abstract void containsAll(
        com.google.protobuf.RpcController controller,
        seedbag.ContainsAllRequest request,
        com.google.protobuf.RpcCallback<seedbag.ContainsAllResponse> done);

    /**
     * <code>rpc AddAll(.seedbag.AddAllRequest) returns (.seedbag.AddAllResponse);</code>
     */
    public abstract void addAll(
        com.google.protobuf.RpcController controller,
        seedbag.AddAllRequest request,
        com.google.protobuf.RpcCallback<seedbag.AddAllResponse> done);

    /**
     * <code>rpc RetainAll(.seedbag.RetainAllRequest) returns (.seedbag.RetainAllResponse);</code>
     */
    public abstract void retainAll(
        com.google.protobuf.RpcController controller,
        seedbag.RetainAllRequest request,
        com.google.protobuf.RpcCallback<seedbag.RetainAllResponse> done);

    /**
     * <code>rpc RemoveAll(.seedbag.RemoveAllRequest) returns (.seedbag.RemoveAllResponse);</code>
     */
    public abstract void removeAll(
        com.google.protobuf.RpcController controller,
        seedbag.RemoveAllRequest request,
        com.google.protobuf.RpcCallback<seedbag.RemoveAllResponse> done);

    /**
     * <code>rpc Clear(.seedbag.ClearRequest) returns (.seedbag.ClearResponse);</code>
     */
    public abstract void clear(
        com.google.protobuf.RpcController controller,
        seedbag.ClearRequest request,
        com.google.protobuf.RpcCallback<seedbag.ClearResponse> done);

    /**
     * <code>rpc Offer(.seedbag.OfferRequest) returns (.seedbag.OfferResponse);</code>
     */
    public abstract void offer(
        com.google.protobuf.RpcController controller,
        seedbag.OfferRequest request,
        com.google.protobuf.RpcCallback<seedbag.OfferResponse> done);

    /**
     * <code>rpc RemoveNoArgs(.seedbag.RemoveNoArgsRequest) returns (.seedbag.RemoveNoArgsResponse);</code>
     */
    public abstract void removeNoArgs(
        com.google.protobuf.RpcController controller,
        seedbag.RemoveNoArgsRequest request,
        com.google.protobuf.RpcCallback<seedbag.RemoveNoArgsResponse> done);

    /**
     * <code>rpc Poll(.seedbag.PollRequest) returns (.seedbag.PollResponse);</code>
     */
    public abstract void poll(
        com.google.protobuf.RpcController controller,
        seedbag.PollRequest request,
        com.google.protobuf.RpcCallback<seedbag.PollResponse> done);

    /**
     * <code>rpc Element(.seedbag.ElementRequest) returns (.seedbag.ElementResponse);</code>
     */
    public abstract void element(
        com.google.protobuf.RpcController controller,
        seedbag.ElementRequest request,
        com.google.protobuf.RpcCallback<seedbag.ElementResponse> done);

    /**
     * <code>rpc Peek(.seedbag.PeekRequest) returns (.seedbag.PeekResponse);</code>
     */
    public abstract void peek(
        com.google.protobuf.RpcController controller,
        seedbag.PeekRequest request,
        com.google.protobuf.RpcCallback<seedbag.PeekResponse> done);

    /**
     * <code>rpc TakeN(.seedbag.TakeNRequest) returns (.seedbag.TakeNResponse);</code>
     */
    public abstract void takeN(
        com.google.protobuf.RpcController controller,
        seedbag.TakeNRequest request,
        com.google.protobuf.RpcCallback<seedbag.TakeNResponse> done);

    /**
     * <code>rpc PollN(.seedbag.PollNRequest) returns (.seedbag.PollNResponse);</code>
     */
    public abstract void pollN(
        com.google.protobuf.RpcController controller,
        seedbag.PollNRequest request,
        com.google.protobuf.RpcCallback<seedbag.PollNResponse> done);

    /**
     * <code>rpc AddN(.seedbag.AddNRequest) returns (.seedbag.AddNResponse);</code>
     */
    public abstract void addN(
        com.google.protobuf.RpcController controller,
        seedbag.AddNRequest request,
        com.google.protobuf.RpcCallback<seedbag.AddNResponse> done);

    /**
     * <code>rpc OfferOrPutBlocking(.seedbag.OfferOrPutBlockingRequest) returns (.seedbag.OfferOrPutBlockingResponse);</code>
     */
    public abstract void offerOrPutBlocking(
        com.google.protobuf.RpcController controller,
        seedbag.OfferOrPutBlockingRequest request,
        com.google.protobuf.RpcCallback<seedbag.OfferOrPutBlockingResponse> done);

  }

  public static com.google.protobuf.Service newReflectiveService(
      final Interface impl) {
    return new SeedBagService() {
      @java.lang.Override
      public  void size(
          com.google.protobuf.RpcController controller,
          seedbag.SizeRequest request,
          com.google.protobuf.RpcCallback<seedbag.SizeResponse> done) {
        impl.size(controller, request, done);
      }

      @java.lang.Override
      public  void isEmpty(
          com.google.protobuf.RpcController controller,
          seedbag.IsEmptyRequest request,
          com.google.protobuf.RpcCallback<seedbag.IsEmptyResponse> done) {
        impl.isEmpty(controller, request, done);
      }

      @java.lang.Override
      public  void contains(
          com.google.protobuf.RpcController controller,
          seedbag.ContainsRequest request,
          com.google.protobuf.RpcCallback<seedbag.ContainsResponse> done) {
        impl.contains(controller, request, done);
      }

      @java.lang.Override
      public  void iterator(
          com.google.protobuf.RpcController controller,
          seedbag.IteratorRequest request,
          com.google.protobuf.RpcCallback<seedbag.IteratorResponse> done) {
        impl.iterator(controller, request, done);
      }

      @java.lang.Override
      public  void toArray(
          com.google.protobuf.RpcController controller,
          seedbag.ToArrayRequest request,
          com.google.protobuf.RpcCallback<seedbag.ToArrayResponse> done) {
        impl.toArray(controller, request, done);
      }

      @java.lang.Override
      public  void add(
          com.google.protobuf.RpcController controller,
          seedbag.AddRequest request,
          com.google.protobuf.RpcCallback<seedbag.AddResponse> done) {
        impl.add(controller, request, done);
      }

      @java.lang.Override
      public  void remove(
          com.google.protobuf.RpcController controller,
          seedbag.RemoveRequest request,
          com.google.protobuf.RpcCallback<seedbag.RemoveResponse> done) {
        impl.remove(controller, request, done);
      }

      @java.lang.Override
      public  void containsAll(
          com.google.protobuf.RpcController controller,
          seedbag.ContainsAllRequest request,
          com.google.protobuf.RpcCallback<seedbag.ContainsAllResponse> done) {
        impl.containsAll(controller, request, done);
      }

      @java.lang.Override
      public  void addAll(
          com.google.protobuf.RpcController controller,
          seedbag.AddAllRequest request,
          com.google.protobuf.RpcCallback<seedbag.AddAllResponse> done) {
        impl.addAll(controller, request, done);
      }

      @java.lang.Override
      public  void retainAll(
          com.google.protobuf.RpcController controller,
          seedbag.RetainAllRequest request,
          com.google.protobuf.RpcCallback<seedbag.RetainAllResponse> done) {
        impl.retainAll(controller, request, done);
      }

      @java.lang.Override
      public  void removeAll(
          com.google.protobuf.RpcController controller,
          seedbag.RemoveAllRequest request,
          com.google.protobuf.RpcCallback<seedbag.RemoveAllResponse> done) {
        impl.removeAll(controller, request, done);
      }

      @java.lang.Override
      public  void clear(
          com.google.protobuf.RpcController controller,
          seedbag.ClearRequest request,
          com.google.protobuf.RpcCallback<seedbag.ClearResponse> done) {
        impl.clear(controller, request, done);
      }

      @java.lang.Override
      public  void offer(
          com.google.protobuf.RpcController controller,
          seedbag.OfferRequest request,
          com.google.protobuf.RpcCallback<seedbag.OfferResponse> done) {
        impl.offer(controller, request, done);
      }

      @java.lang.Override
      public  void removeNoArgs(
          com.google.protobuf.RpcController controller,
          seedbag.RemoveNoArgsRequest request,
          com.google.protobuf.RpcCallback<seedbag.RemoveNoArgsResponse> done) {
        impl.removeNoArgs(controller, request, done);
      }

      @java.lang.Override
      public  void poll(
          com.google.protobuf.RpcController controller,
          seedbag.PollRequest request,
          com.google.protobuf.RpcCallback<seedbag.PollResponse> done) {
        impl.poll(controller, request, done);
      }

      @java.lang.Override
      public  void element(
          com.google.protobuf.RpcController controller,
          seedbag.ElementRequest request,
          com.google.protobuf.RpcCallback<seedbag.ElementResponse> done) {
        impl.element(controller, request, done);
      }

      @java.lang.Override
      public  void peek(
          com.google.protobuf.RpcController controller,
          seedbag.PeekRequest request,
          com.google.protobuf.RpcCallback<seedbag.PeekResponse> done) {
        impl.peek(controller, request, done);
      }

      @java.lang.Override
      public  void takeN(
          com.google.protobuf.RpcController controller,
          seedbag.TakeNRequest request,
          com.google.protobuf.RpcCallback<seedbag.TakeNResponse> done) {
        impl.takeN(controller, request, done);
      }

      @java.lang.Override
      public  void pollN(
          com.google.protobuf.RpcController controller,
          seedbag.PollNRequest request,
          com.google.protobuf.RpcCallback<seedbag.PollNResponse> done) {
        impl.pollN(controller, request, done);
      }

      @java.lang.Override
      public  void addN(
          com.google.protobuf.RpcController controller,
          seedbag.AddNRequest request,
          com.google.protobuf.RpcCallback<seedbag.AddNResponse> done) {
        impl.addN(controller, request, done);
      }

      @java.lang.Override
      public  void offerOrPutBlocking(
          com.google.protobuf.RpcController controller,
          seedbag.OfferOrPutBlockingRequest request,
          com.google.protobuf.RpcCallback<seedbag.OfferOrPutBlockingResponse> done) {
        impl.offerOrPutBlocking(controller, request, done);
      }

    };
  }

  public static com.google.protobuf.BlockingService
      newReflectiveBlockingService(final BlockingInterface impl) {
    return new com.google.protobuf.BlockingService() {
      public final com.google.protobuf.Descriptors.ServiceDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }

      public final com.google.protobuf.Message callBlockingMethod(
          com.google.protobuf.Descriptors.MethodDescriptor method,
          com.google.protobuf.RpcController controller,
          com.google.protobuf.Message request)
          throws com.google.protobuf.ServiceException {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.callBlockingMethod() given method descriptor for " +
            "wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return impl.size(controller, (seedbag.SizeRequest)request);
          case 1:
            return impl.isEmpty(controller, (seedbag.IsEmptyRequest)request);
          case 2:
            return impl.contains(controller, (seedbag.ContainsRequest)request);
          case 3:
            return impl.iterator(controller, (seedbag.IteratorRequest)request);
          case 4:
            return impl.toArray(controller, (seedbag.ToArrayRequest)request);
          case 5:
            return impl.add(controller, (seedbag.AddRequest)request);
          case 6:
            return impl.remove(controller, (seedbag.RemoveRequest)request);
          case 7:
            return impl.containsAll(controller, (seedbag.ContainsAllRequest)request);
          case 8:
            return impl.addAll(controller, (seedbag.AddAllRequest)request);
          case 9:
            return impl.retainAll(controller, (seedbag.RetainAllRequest)request);
          case 10:
            return impl.removeAll(controller, (seedbag.RemoveAllRequest)request);
          case 11:
            return impl.clear(controller, (seedbag.ClearRequest)request);
          case 12:
            return impl.offer(controller, (seedbag.OfferRequest)request);
          case 13:
            return impl.removeNoArgs(controller, (seedbag.RemoveNoArgsRequest)request);
          case 14:
            return impl.poll(controller, (seedbag.PollRequest)request);
          case 15:
            return impl.element(controller, (seedbag.ElementRequest)request);
          case 16:
            return impl.peek(controller, (seedbag.PeekRequest)request);
          case 17:
            return impl.takeN(controller, (seedbag.TakeNRequest)request);
          case 18:
            return impl.pollN(controller, (seedbag.PollNRequest)request);
          case 19:
            return impl.addN(controller, (seedbag.AddNRequest)request);
          case 20:
            return impl.offerOrPutBlocking(controller, (seedbag.OfferOrPutBlockingRequest)request);
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

      public final com.google.protobuf.Message
          getRequestPrototype(
          com.google.protobuf.Descriptors.MethodDescriptor method) {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.getRequestPrototype() given method " +
            "descriptor for wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return seedbag.SizeRequest.getDefaultInstance();
          case 1:
            return seedbag.IsEmptyRequest.getDefaultInstance();
          case 2:
            return seedbag.ContainsRequest.getDefaultInstance();
          case 3:
            return seedbag.IteratorRequest.getDefaultInstance();
          case 4:
            return seedbag.ToArrayRequest.getDefaultInstance();
          case 5:
            return seedbag.AddRequest.getDefaultInstance();
          case 6:
            return seedbag.RemoveRequest.getDefaultInstance();
          case 7:
            return seedbag.ContainsAllRequest.getDefaultInstance();
          case 8:
            return seedbag.AddAllRequest.getDefaultInstance();
          case 9:
            return seedbag.RetainAllRequest.getDefaultInstance();
          case 10:
            return seedbag.RemoveAllRequest.getDefaultInstance();
          case 11:
            return seedbag.ClearRequest.getDefaultInstance();
          case 12:
            return seedbag.OfferRequest.getDefaultInstance();
          case 13:
            return seedbag.RemoveNoArgsRequest.getDefaultInstance();
          case 14:
            return seedbag.PollRequest.getDefaultInstance();
          case 15:
            return seedbag.ElementRequest.getDefaultInstance();
          case 16:
            return seedbag.PeekRequest.getDefaultInstance();
          case 17:
            return seedbag.TakeNRequest.getDefaultInstance();
          case 18:
            return seedbag.PollNRequest.getDefaultInstance();
          case 19:
            return seedbag.AddNRequest.getDefaultInstance();
          case 20:
            return seedbag.OfferOrPutBlockingRequest.getDefaultInstance();
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

      public final com.google.protobuf.Message
          getResponsePrototype(
          com.google.protobuf.Descriptors.MethodDescriptor method) {
        if (method.getService() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "Service.getResponsePrototype() given method " +
            "descriptor for wrong service type.");
        }
        switch(method.getIndex()) {
          case 0:
            return seedbag.SizeResponse.getDefaultInstance();
          case 1:
            return seedbag.IsEmptyResponse.getDefaultInstance();
          case 2:
            return seedbag.ContainsResponse.getDefaultInstance();
          case 3:
            return seedbag.IteratorResponse.getDefaultInstance();
          case 4:
            return seedbag.ToArrayResponse.getDefaultInstance();
          case 5:
            return seedbag.AddResponse.getDefaultInstance();
          case 6:
            return seedbag.RemoveResponse.getDefaultInstance();
          case 7:
            return seedbag.ContainsAllResponse.getDefaultInstance();
          case 8:
            return seedbag.AddAllResponse.getDefaultInstance();
          case 9:
            return seedbag.RetainAllResponse.getDefaultInstance();
          case 10:
            return seedbag.RemoveAllResponse.getDefaultInstance();
          case 11:
            return seedbag.ClearResponse.getDefaultInstance();
          case 12:
            return seedbag.OfferResponse.getDefaultInstance();
          case 13:
            return seedbag.RemoveNoArgsResponse.getDefaultInstance();
          case 14:
            return seedbag.PollResponse.getDefaultInstance();
          case 15:
            return seedbag.ElementResponse.getDefaultInstance();
          case 16:
            return seedbag.PeekResponse.getDefaultInstance();
          case 17:
            return seedbag.TakeNResponse.getDefaultInstance();
          case 18:
            return seedbag.PollNResponse.getDefaultInstance();
          case 19:
            return seedbag.AddNResponse.getDefaultInstance();
          case 20:
            return seedbag.OfferOrPutBlockingResponse.getDefaultInstance();
          default:
            throw new java.lang.AssertionError("Can't get here.");
        }
      }

    };
  }

  /**
   * <code>rpc Size(.seedbag.SizeRequest) returns (.seedbag.SizeResponse);</code>
   */
  public abstract void size(
      com.google.protobuf.RpcController controller,
      seedbag.SizeRequest request,
      com.google.protobuf.RpcCallback<seedbag.SizeResponse> done);

  /**
   * <code>rpc IsEmpty(.seedbag.IsEmptyRequest) returns (.seedbag.IsEmptyResponse);</code>
   */
  public abstract void isEmpty(
      com.google.protobuf.RpcController controller,
      seedbag.IsEmptyRequest request,
      com.google.protobuf.RpcCallback<seedbag.IsEmptyResponse> done);

  /**
   * <code>rpc Contains(.seedbag.ContainsRequest) returns (.seedbag.ContainsResponse);</code>
   */
  public abstract void contains(
      com.google.protobuf.RpcController controller,
      seedbag.ContainsRequest request,
      com.google.protobuf.RpcCallback<seedbag.ContainsResponse> done);

  /**
   * <code>rpc Iterator(.seedbag.IteratorRequest) returns (.seedbag.IteratorResponse);</code>
   */
  public abstract void iterator(
      com.google.protobuf.RpcController controller,
      seedbag.IteratorRequest request,
      com.google.protobuf.RpcCallback<seedbag.IteratorResponse> done);

  /**
   * <code>rpc ToArray(.seedbag.ToArrayRequest) returns (.seedbag.ToArrayResponse);</code>
   */
  public abstract void toArray(
      com.google.protobuf.RpcController controller,
      seedbag.ToArrayRequest request,
      com.google.protobuf.RpcCallback<seedbag.ToArrayResponse> done);

  /**
   * <code>rpc Add(.seedbag.AddRequest) returns (.seedbag.AddResponse);</code>
   */
  public abstract void add(
      com.google.protobuf.RpcController controller,
      seedbag.AddRequest request,
      com.google.protobuf.RpcCallback<seedbag.AddResponse> done);

  /**
   * <code>rpc Remove(.seedbag.RemoveRequest) returns (.seedbag.RemoveResponse);</code>
   */
  public abstract void remove(
      com.google.protobuf.RpcController controller,
      seedbag.RemoveRequest request,
      com.google.protobuf.RpcCallback<seedbag.RemoveResponse> done);

  /**
   * <code>rpc ContainsAll(.seedbag.ContainsAllRequest) returns (.seedbag.ContainsAllResponse);</code>
   */
  public abstract void containsAll(
      com.google.protobuf.RpcController controller,
      seedbag.ContainsAllRequest request,
      com.google.protobuf.RpcCallback<seedbag.ContainsAllResponse> done);

  /**
   * <code>rpc AddAll(.seedbag.AddAllRequest) returns (.seedbag.AddAllResponse);</code>
   */
  public abstract void addAll(
      com.google.protobuf.RpcController controller,
      seedbag.AddAllRequest request,
      com.google.protobuf.RpcCallback<seedbag.AddAllResponse> done);

  /**
   * <code>rpc RetainAll(.seedbag.RetainAllRequest) returns (.seedbag.RetainAllResponse);</code>
   */
  public abstract void retainAll(
      com.google.protobuf.RpcController controller,
      seedbag.RetainAllRequest request,
      com.google.protobuf.RpcCallback<seedbag.RetainAllResponse> done);

  /**
   * <code>rpc RemoveAll(.seedbag.RemoveAllRequest) returns (.seedbag.RemoveAllResponse);</code>
   */
  public abstract void removeAll(
      com.google.protobuf.RpcController controller,
      seedbag.RemoveAllRequest request,
      com.google.protobuf.RpcCallback<seedbag.RemoveAllResponse> done);

  /**
   * <code>rpc Clear(.seedbag.ClearRequest) returns (.seedbag.ClearResponse);</code>
   */
  public abstract void clear(
      com.google.protobuf.RpcController controller,
      seedbag.ClearRequest request,
      com.google.protobuf.RpcCallback<seedbag.ClearResponse> done);

  /**
   * <code>rpc Offer(.seedbag.OfferRequest) returns (.seedbag.OfferResponse);</code>
   */
  public abstract void offer(
      com.google.protobuf.RpcController controller,
      seedbag.OfferRequest request,
      com.google.protobuf.RpcCallback<seedbag.OfferResponse> done);

  /**
   * <code>rpc RemoveNoArgs(.seedbag.RemoveNoArgsRequest) returns (.seedbag.RemoveNoArgsResponse);</code>
   */
  public abstract void removeNoArgs(
      com.google.protobuf.RpcController controller,
      seedbag.RemoveNoArgsRequest request,
      com.google.protobuf.RpcCallback<seedbag.RemoveNoArgsResponse> done);

  /**
   * <code>rpc Poll(.seedbag.PollRequest) returns (.seedbag.PollResponse);</code>
   */
  public abstract void poll(
      com.google.protobuf.RpcController controller,
      seedbag.PollRequest request,
      com.google.protobuf.RpcCallback<seedbag.PollResponse> done);

  /**
   * <code>rpc Element(.seedbag.ElementRequest) returns (.seedbag.ElementResponse);</code>
   */
  public abstract void element(
      com.google.protobuf.RpcController controller,
      seedbag.ElementRequest request,
      com.google.protobuf.RpcCallback<seedbag.ElementResponse> done);

  /**
   * <code>rpc Peek(.seedbag.PeekRequest) returns (.seedbag.PeekResponse);</code>
   */
  public abstract void peek(
      com.google.protobuf.RpcController controller,
      seedbag.PeekRequest request,
      com.google.protobuf.RpcCallback<seedbag.PeekResponse> done);

  /**
   * <code>rpc TakeN(.seedbag.TakeNRequest) returns (.seedbag.TakeNResponse);</code>
   */
  public abstract void takeN(
      com.google.protobuf.RpcController controller,
      seedbag.TakeNRequest request,
      com.google.protobuf.RpcCallback<seedbag.TakeNResponse> done);

  /**
   * <code>rpc PollN(.seedbag.PollNRequest) returns (.seedbag.PollNResponse);</code>
   */
  public abstract void pollN(
      com.google.protobuf.RpcController controller,
      seedbag.PollNRequest request,
      com.google.protobuf.RpcCallback<seedbag.PollNResponse> done);

  /**
   * <code>rpc AddN(.seedbag.AddNRequest) returns (.seedbag.AddNResponse);</code>
   */
  public abstract void addN(
      com.google.protobuf.RpcController controller,
      seedbag.AddNRequest request,
      com.google.protobuf.RpcCallback<seedbag.AddNResponse> done);

  /**
   * <code>rpc OfferOrPutBlocking(.seedbag.OfferOrPutBlockingRequest) returns (.seedbag.OfferOrPutBlockingResponse);</code>
   */
  public abstract void offerOrPutBlocking(
      com.google.protobuf.RpcController controller,
      seedbag.OfferOrPutBlockingRequest request,
      com.google.protobuf.RpcCallback<seedbag.OfferOrPutBlockingResponse> done);

  public static final
      com.google.protobuf.Descriptors.ServiceDescriptor
      getDescriptor() {
    return seedbag.CTrieProto.getDescriptor().getServices().get(0);
  }
  public final com.google.protobuf.Descriptors.ServiceDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }

  public final void callMethod(
      com.google.protobuf.Descriptors.MethodDescriptor method,
      com.google.protobuf.RpcController controller,
      com.google.protobuf.Message request,
      com.google.protobuf.RpcCallback<
        com.google.protobuf.Message> done) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.callMethod() given method descriptor for wrong " +
        "service type.");
    }
    switch(method.getIndex()) {
      case 0:
        this.size(controller, (seedbag.SizeRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.SizeResponse>specializeCallback(
            done));
        return;
      case 1:
        this.isEmpty(controller, (seedbag.IsEmptyRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.IsEmptyResponse>specializeCallback(
            done));
        return;
      case 2:
        this.contains(controller, (seedbag.ContainsRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.ContainsResponse>specializeCallback(
            done));
        return;
      case 3:
        this.iterator(controller, (seedbag.IteratorRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.IteratorResponse>specializeCallback(
            done));
        return;
      case 4:
        this.toArray(controller, (seedbag.ToArrayRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.ToArrayResponse>specializeCallback(
            done));
        return;
      case 5:
        this.add(controller, (seedbag.AddRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.AddResponse>specializeCallback(
            done));
        return;
      case 6:
        this.remove(controller, (seedbag.RemoveRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.RemoveResponse>specializeCallback(
            done));
        return;
      case 7:
        this.containsAll(controller, (seedbag.ContainsAllRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.ContainsAllResponse>specializeCallback(
            done));
        return;
      case 8:
        this.addAll(controller, (seedbag.AddAllRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.AddAllResponse>specializeCallback(
            done));
        return;
      case 9:
        this.retainAll(controller, (seedbag.RetainAllRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.RetainAllResponse>specializeCallback(
            done));
        return;
      case 10:
        this.removeAll(controller, (seedbag.RemoveAllRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.RemoveAllResponse>specializeCallback(
            done));
        return;
      case 11:
        this.clear(controller, (seedbag.ClearRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.ClearResponse>specializeCallback(
            done));
        return;
      case 12:
        this.offer(controller, (seedbag.OfferRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.OfferResponse>specializeCallback(
            done));
        return;
      case 13:
        this.removeNoArgs(controller, (seedbag.RemoveNoArgsRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.RemoveNoArgsResponse>specializeCallback(
            done));
        return;
      case 14:
        this.poll(controller, (seedbag.PollRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.PollResponse>specializeCallback(
            done));
        return;
      case 15:
        this.element(controller, (seedbag.ElementRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.ElementResponse>specializeCallback(
            done));
        return;
      case 16:
        this.peek(controller, (seedbag.PeekRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.PeekResponse>specializeCallback(
            done));
        return;
      case 17:
        this.takeN(controller, (seedbag.TakeNRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.TakeNResponse>specializeCallback(
            done));
        return;
      case 18:
        this.pollN(controller, (seedbag.PollNRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.PollNResponse>specializeCallback(
            done));
        return;
      case 19:
        this.addN(controller, (seedbag.AddNRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.AddNResponse>specializeCallback(
            done));
        return;
      case 20:
        this.offerOrPutBlocking(controller, (seedbag.OfferOrPutBlockingRequest)request,
          com.google.protobuf.RpcUtil.<seedbag.OfferOrPutBlockingResponse>specializeCallback(
            done));
        return;
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public final com.google.protobuf.Message
      getRequestPrototype(
      com.google.protobuf.Descriptors.MethodDescriptor method) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.getRequestPrototype() given method " +
        "descriptor for wrong service type.");
    }
    switch(method.getIndex()) {
      case 0:
        return seedbag.SizeRequest.getDefaultInstance();
      case 1:
        return seedbag.IsEmptyRequest.getDefaultInstance();
      case 2:
        return seedbag.ContainsRequest.getDefaultInstance();
      case 3:
        return seedbag.IteratorRequest.getDefaultInstance();
      case 4:
        return seedbag.ToArrayRequest.getDefaultInstance();
      case 5:
        return seedbag.AddRequest.getDefaultInstance();
      case 6:
        return seedbag.RemoveRequest.getDefaultInstance();
      case 7:
        return seedbag.ContainsAllRequest.getDefaultInstance();
      case 8:
        return seedbag.AddAllRequest.getDefaultInstance();
      case 9:
        return seedbag.RetainAllRequest.getDefaultInstance();
      case 10:
        return seedbag.RemoveAllRequest.getDefaultInstance();
      case 11:
        return seedbag.ClearRequest.getDefaultInstance();
      case 12:
        return seedbag.OfferRequest.getDefaultInstance();
      case 13:
        return seedbag.RemoveNoArgsRequest.getDefaultInstance();
      case 14:
        return seedbag.PollRequest.getDefaultInstance();
      case 15:
        return seedbag.ElementRequest.getDefaultInstance();
      case 16:
        return seedbag.PeekRequest.getDefaultInstance();
      case 17:
        return seedbag.TakeNRequest.getDefaultInstance();
      case 18:
        return seedbag.PollNRequest.getDefaultInstance();
      case 19:
        return seedbag.AddNRequest.getDefaultInstance();
      case 20:
        return seedbag.OfferOrPutBlockingRequest.getDefaultInstance();
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public final com.google.protobuf.Message
      getResponsePrototype(
      com.google.protobuf.Descriptors.MethodDescriptor method) {
    if (method.getService() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "Service.getResponsePrototype() given method " +
        "descriptor for wrong service type.");
    }
    switch(method.getIndex()) {
      case 0:
        return seedbag.SizeResponse.getDefaultInstance();
      case 1:
        return seedbag.IsEmptyResponse.getDefaultInstance();
      case 2:
        return seedbag.ContainsResponse.getDefaultInstance();
      case 3:
        return seedbag.IteratorResponse.getDefaultInstance();
      case 4:
        return seedbag.ToArrayResponse.getDefaultInstance();
      case 5:
        return seedbag.AddResponse.getDefaultInstance();
      case 6:
        return seedbag.RemoveResponse.getDefaultInstance();
      case 7:
        return seedbag.ContainsAllResponse.getDefaultInstance();
      case 8:
        return seedbag.AddAllResponse.getDefaultInstance();
      case 9:
        return seedbag.RetainAllResponse.getDefaultInstance();
      case 10:
        return seedbag.RemoveAllResponse.getDefaultInstance();
      case 11:
        return seedbag.ClearResponse.getDefaultInstance();
      case 12:
        return seedbag.OfferResponse.getDefaultInstance();
      case 13:
        return seedbag.RemoveNoArgsResponse.getDefaultInstance();
      case 14:
        return seedbag.PollResponse.getDefaultInstance();
      case 15:
        return seedbag.ElementResponse.getDefaultInstance();
      case 16:
        return seedbag.PeekResponse.getDefaultInstance();
      case 17:
        return seedbag.TakeNResponse.getDefaultInstance();
      case 18:
        return seedbag.PollNResponse.getDefaultInstance();
      case 19:
        return seedbag.AddNResponse.getDefaultInstance();
      case 20:
        return seedbag.OfferOrPutBlockingResponse.getDefaultInstance();
      default:
        throw new java.lang.AssertionError("Can't get here.");
    }
  }

  public static Stub newStub(
      com.google.protobuf.RpcChannel channel) {
    return new Stub(channel);
  }

  public static final class Stub extends seedbag.SeedBagService implements Interface {
    private Stub(com.google.protobuf.RpcChannel channel) {
      this.channel = channel;
    }

    private final com.google.protobuf.RpcChannel channel;

    public com.google.protobuf.RpcChannel getChannel() {
      return channel;
    }

    public  void size(
        com.google.protobuf.RpcController controller,
        seedbag.SizeRequest request,
        com.google.protobuf.RpcCallback<seedbag.SizeResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(0),
        controller,
        request,
        seedbag.SizeResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.SizeResponse.class,
          seedbag.SizeResponse.getDefaultInstance()));
    }

    public  void isEmpty(
        com.google.protobuf.RpcController controller,
        seedbag.IsEmptyRequest request,
        com.google.protobuf.RpcCallback<seedbag.IsEmptyResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(1),
        controller,
        request,
        seedbag.IsEmptyResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.IsEmptyResponse.class,
          seedbag.IsEmptyResponse.getDefaultInstance()));
    }

    public  void contains(
        com.google.protobuf.RpcController controller,
        seedbag.ContainsRequest request,
        com.google.protobuf.RpcCallback<seedbag.ContainsResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(2),
        controller,
        request,
        seedbag.ContainsResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.ContainsResponse.class,
          seedbag.ContainsResponse.getDefaultInstance()));
    }

    public  void iterator(
        com.google.protobuf.RpcController controller,
        seedbag.IteratorRequest request,
        com.google.protobuf.RpcCallback<seedbag.IteratorResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(3),
        controller,
        request,
        seedbag.IteratorResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.IteratorResponse.class,
          seedbag.IteratorResponse.getDefaultInstance()));
    }

    public  void toArray(
        com.google.protobuf.RpcController controller,
        seedbag.ToArrayRequest request,
        com.google.protobuf.RpcCallback<seedbag.ToArrayResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(4),
        controller,
        request,
        seedbag.ToArrayResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.ToArrayResponse.class,
          seedbag.ToArrayResponse.getDefaultInstance()));
    }

    public  void add(
        com.google.protobuf.RpcController controller,
        seedbag.AddRequest request,
        com.google.protobuf.RpcCallback<seedbag.AddResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(5),
        controller,
        request,
        seedbag.AddResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.AddResponse.class,
          seedbag.AddResponse.getDefaultInstance()));
    }

    public  void remove(
        com.google.protobuf.RpcController controller,
        seedbag.RemoveRequest request,
        com.google.protobuf.RpcCallback<seedbag.RemoveResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(6),
        controller,
        request,
        seedbag.RemoveResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.RemoveResponse.class,
          seedbag.RemoveResponse.getDefaultInstance()));
    }

    public  void containsAll(
        com.google.protobuf.RpcController controller,
        seedbag.ContainsAllRequest request,
        com.google.protobuf.RpcCallback<seedbag.ContainsAllResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(7),
        controller,
        request,
        seedbag.ContainsAllResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.ContainsAllResponse.class,
          seedbag.ContainsAllResponse.getDefaultInstance()));
    }

    public  void addAll(
        com.google.protobuf.RpcController controller,
        seedbag.AddAllRequest request,
        com.google.protobuf.RpcCallback<seedbag.AddAllResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(8),
        controller,
        request,
        seedbag.AddAllResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.AddAllResponse.class,
          seedbag.AddAllResponse.getDefaultInstance()));
    }

    public  void retainAll(
        com.google.protobuf.RpcController controller,
        seedbag.RetainAllRequest request,
        com.google.protobuf.RpcCallback<seedbag.RetainAllResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(9),
        controller,
        request,
        seedbag.RetainAllResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.RetainAllResponse.class,
          seedbag.RetainAllResponse.getDefaultInstance()));
    }

    public  void removeAll(
        com.google.protobuf.RpcController controller,
        seedbag.RemoveAllRequest request,
        com.google.protobuf.RpcCallback<seedbag.RemoveAllResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(10),
        controller,
        request,
        seedbag.RemoveAllResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.RemoveAllResponse.class,
          seedbag.RemoveAllResponse.getDefaultInstance()));
    }

    public  void clear(
        com.google.protobuf.RpcController controller,
        seedbag.ClearRequest request,
        com.google.protobuf.RpcCallback<seedbag.ClearResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(11),
        controller,
        request,
        seedbag.ClearResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.ClearResponse.class,
          seedbag.ClearResponse.getDefaultInstance()));
    }

    public  void offer(
        com.google.protobuf.RpcController controller,
        seedbag.OfferRequest request,
        com.google.protobuf.RpcCallback<seedbag.OfferResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(12),
        controller,
        request,
        seedbag.OfferResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.OfferResponse.class,
          seedbag.OfferResponse.getDefaultInstance()));
    }

    public  void removeNoArgs(
        com.google.protobuf.RpcController controller,
        seedbag.RemoveNoArgsRequest request,
        com.google.protobuf.RpcCallback<seedbag.RemoveNoArgsResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(13),
        controller,
        request,
        seedbag.RemoveNoArgsResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.RemoveNoArgsResponse.class,
          seedbag.RemoveNoArgsResponse.getDefaultInstance()));
    }

    public  void poll(
        com.google.protobuf.RpcController controller,
        seedbag.PollRequest request,
        com.google.protobuf.RpcCallback<seedbag.PollResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(14),
        controller,
        request,
        seedbag.PollResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.PollResponse.class,
          seedbag.PollResponse.getDefaultInstance()));
    }

    public  void element(
        com.google.protobuf.RpcController controller,
        seedbag.ElementRequest request,
        com.google.protobuf.RpcCallback<seedbag.ElementResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(15),
        controller,
        request,
        seedbag.ElementResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.ElementResponse.class,
          seedbag.ElementResponse.getDefaultInstance()));
    }

    public  void peek(
        com.google.protobuf.RpcController controller,
        seedbag.PeekRequest request,
        com.google.protobuf.RpcCallback<seedbag.PeekResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(16),
        controller,
        request,
        seedbag.PeekResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.PeekResponse.class,
          seedbag.PeekResponse.getDefaultInstance()));
    }

    public  void takeN(
        com.google.protobuf.RpcController controller,
        seedbag.TakeNRequest request,
        com.google.protobuf.RpcCallback<seedbag.TakeNResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(17),
        controller,
        request,
        seedbag.TakeNResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.TakeNResponse.class,
          seedbag.TakeNResponse.getDefaultInstance()));
    }

    public  void pollN(
        com.google.protobuf.RpcController controller,
        seedbag.PollNRequest request,
        com.google.protobuf.RpcCallback<seedbag.PollNResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(18),
        controller,
        request,
        seedbag.PollNResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.PollNResponse.class,
          seedbag.PollNResponse.getDefaultInstance()));
    }

    public  void addN(
        com.google.protobuf.RpcController controller,
        seedbag.AddNRequest request,
        com.google.protobuf.RpcCallback<seedbag.AddNResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(19),
        controller,
        request,
        seedbag.AddNResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.AddNResponse.class,
          seedbag.AddNResponse.getDefaultInstance()));
    }

    public  void offerOrPutBlocking(
        com.google.protobuf.RpcController controller,
        seedbag.OfferOrPutBlockingRequest request,
        com.google.protobuf.RpcCallback<seedbag.OfferOrPutBlockingResponse> done) {
      channel.callMethod(
        getDescriptor().getMethods().get(20),
        controller,
        request,
        seedbag.OfferOrPutBlockingResponse.getDefaultInstance(),
        com.google.protobuf.RpcUtil.generalizeCallback(
          done,
          seedbag.OfferOrPutBlockingResponse.class,
          seedbag.OfferOrPutBlockingResponse.getDefaultInstance()));
    }
  }

  public static BlockingInterface newBlockingStub(
      com.google.protobuf.BlockingRpcChannel channel) {
    return new BlockingStub(channel);
  }

  public interface BlockingInterface {
    public seedbag.SizeResponse size(
        com.google.protobuf.RpcController controller,
        seedbag.SizeRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.IsEmptyResponse isEmpty(
        com.google.protobuf.RpcController controller,
        seedbag.IsEmptyRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.ContainsResponse contains(
        com.google.protobuf.RpcController controller,
        seedbag.ContainsRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.IteratorResponse iterator(
        com.google.protobuf.RpcController controller,
        seedbag.IteratorRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.ToArrayResponse toArray(
        com.google.protobuf.RpcController controller,
        seedbag.ToArrayRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.AddResponse add(
        com.google.protobuf.RpcController controller,
        seedbag.AddRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.RemoveResponse remove(
        com.google.protobuf.RpcController controller,
        seedbag.RemoveRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.ContainsAllResponse containsAll(
        com.google.protobuf.RpcController controller,
        seedbag.ContainsAllRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.AddAllResponse addAll(
        com.google.protobuf.RpcController controller,
        seedbag.AddAllRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.RetainAllResponse retainAll(
        com.google.protobuf.RpcController controller,
        seedbag.RetainAllRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.RemoveAllResponse removeAll(
        com.google.protobuf.RpcController controller,
        seedbag.RemoveAllRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.ClearResponse clear(
        com.google.protobuf.RpcController controller,
        seedbag.ClearRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.OfferResponse offer(
        com.google.protobuf.RpcController controller,
        seedbag.OfferRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.RemoveNoArgsResponse removeNoArgs(
        com.google.protobuf.RpcController controller,
        seedbag.RemoveNoArgsRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.PollResponse poll(
        com.google.protobuf.RpcController controller,
        seedbag.PollRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.ElementResponse element(
        com.google.protobuf.RpcController controller,
        seedbag.ElementRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.PeekResponse peek(
        com.google.protobuf.RpcController controller,
        seedbag.PeekRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.TakeNResponse takeN(
        com.google.protobuf.RpcController controller,
        seedbag.TakeNRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.PollNResponse pollN(
        com.google.protobuf.RpcController controller,
        seedbag.PollNRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.AddNResponse addN(
        com.google.protobuf.RpcController controller,
        seedbag.AddNRequest request)
        throws com.google.protobuf.ServiceException;

    public seedbag.OfferOrPutBlockingResponse offerOrPutBlocking(
        com.google.protobuf.RpcController controller,
        seedbag.OfferOrPutBlockingRequest request)
        throws com.google.protobuf.ServiceException;
  }

  private static final class BlockingStub implements BlockingInterface {
    private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
      this.channel = channel;
    }

    private final com.google.protobuf.BlockingRpcChannel channel;

    public seedbag.SizeResponse size(
        com.google.protobuf.RpcController controller,
        seedbag.SizeRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.SizeResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(0),
        controller,
        request,
        seedbag.SizeResponse.getDefaultInstance());
    }


    public seedbag.IsEmptyResponse isEmpty(
        com.google.protobuf.RpcController controller,
        seedbag.IsEmptyRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.IsEmptyResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(1),
        controller,
        request,
        seedbag.IsEmptyResponse.getDefaultInstance());
    }


    public seedbag.ContainsResponse contains(
        com.google.protobuf.RpcController controller,
        seedbag.ContainsRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.ContainsResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(2),
        controller,
        request,
        seedbag.ContainsResponse.getDefaultInstance());
    }


    public seedbag.IteratorResponse iterator(
        com.google.protobuf.RpcController controller,
        seedbag.IteratorRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.IteratorResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(3),
        controller,
        request,
        seedbag.IteratorResponse.getDefaultInstance());
    }


    public seedbag.ToArrayResponse toArray(
        com.google.protobuf.RpcController controller,
        seedbag.ToArrayRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.ToArrayResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(4),
        controller,
        request,
        seedbag.ToArrayResponse.getDefaultInstance());
    }


    public seedbag.AddResponse add(
        com.google.protobuf.RpcController controller,
        seedbag.AddRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.AddResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(5),
        controller,
        request,
        seedbag.AddResponse.getDefaultInstance());
    }


    public seedbag.RemoveResponse remove(
        com.google.protobuf.RpcController controller,
        seedbag.RemoveRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.RemoveResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(6),
        controller,
        request,
        seedbag.RemoveResponse.getDefaultInstance());
    }


    public seedbag.ContainsAllResponse containsAll(
        com.google.protobuf.RpcController controller,
        seedbag.ContainsAllRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.ContainsAllResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(7),
        controller,
        request,
        seedbag.ContainsAllResponse.getDefaultInstance());
    }


    public seedbag.AddAllResponse addAll(
        com.google.protobuf.RpcController controller,
        seedbag.AddAllRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.AddAllResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(8),
        controller,
        request,
        seedbag.AddAllResponse.getDefaultInstance());
    }


    public seedbag.RetainAllResponse retainAll(
        com.google.protobuf.RpcController controller,
        seedbag.RetainAllRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.RetainAllResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(9),
        controller,
        request,
        seedbag.RetainAllResponse.getDefaultInstance());
    }


    public seedbag.RemoveAllResponse removeAll(
        com.google.protobuf.RpcController controller,
        seedbag.RemoveAllRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.RemoveAllResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(10),
        controller,
        request,
        seedbag.RemoveAllResponse.getDefaultInstance());
    }


    public seedbag.ClearResponse clear(
        com.google.protobuf.RpcController controller,
        seedbag.ClearRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.ClearResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(11),
        controller,
        request,
        seedbag.ClearResponse.getDefaultInstance());
    }


    public seedbag.OfferResponse offer(
        com.google.protobuf.RpcController controller,
        seedbag.OfferRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.OfferResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(12),
        controller,
        request,
        seedbag.OfferResponse.getDefaultInstance());
    }


    public seedbag.RemoveNoArgsResponse removeNoArgs(
        com.google.protobuf.RpcController controller,
        seedbag.RemoveNoArgsRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.RemoveNoArgsResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(13),
        controller,
        request,
        seedbag.RemoveNoArgsResponse.getDefaultInstance());
    }


    public seedbag.PollResponse poll(
        com.google.protobuf.RpcController controller,
        seedbag.PollRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.PollResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(14),
        controller,
        request,
        seedbag.PollResponse.getDefaultInstance());
    }


    public seedbag.ElementResponse element(
        com.google.protobuf.RpcController controller,
        seedbag.ElementRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.ElementResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(15),
        controller,
        request,
        seedbag.ElementResponse.getDefaultInstance());
    }


    public seedbag.PeekResponse peek(
        com.google.protobuf.RpcController controller,
        seedbag.PeekRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.PeekResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(16),
        controller,
        request,
        seedbag.PeekResponse.getDefaultInstance());
    }


    public seedbag.TakeNResponse takeN(
        com.google.protobuf.RpcController controller,
        seedbag.TakeNRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.TakeNResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(17),
        controller,
        request,
        seedbag.TakeNResponse.getDefaultInstance());
    }


    public seedbag.PollNResponse pollN(
        com.google.protobuf.RpcController controller,
        seedbag.PollNRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.PollNResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(18),
        controller,
        request,
        seedbag.PollNResponse.getDefaultInstance());
    }


    public seedbag.AddNResponse addN(
        com.google.protobuf.RpcController controller,
        seedbag.AddNRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.AddNResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(19),
        controller,
        request,
        seedbag.AddNResponse.getDefaultInstance());
    }


    public seedbag.OfferOrPutBlockingResponse offerOrPutBlocking(
        com.google.protobuf.RpcController controller,
        seedbag.OfferOrPutBlockingRequest request)
        throws com.google.protobuf.ServiceException {
      return (seedbag.OfferOrPutBlockingResponse) channel.callBlockingMethod(
        getDescriptor().getMethods().get(20),
        controller,
        request,
        seedbag.OfferOrPutBlockingResponse.getDefaultInstance());
    }

  }

  // @@protoc_insertion_point(class_scope:seedbag.SeedBagService)
}

